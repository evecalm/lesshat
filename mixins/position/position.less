.position(@position: '', @top: '', @right: '', @bottom: '', @left: '') when (iskeyword(@position)) and not (@position = static ) {

  // default unit
  @unit: 'px';
  
  // for keyword: auto
  .mix-top(@top) when (iskeyword(@top)) {
    top:  @top;
  }
  // for number, percent, em, rem, px
  .mix-top(@top) when (isnumber(@top)) {
    // with unit
    .mix(@top) when not (unit(@top) = @top) {
      top:  @top;
    }
    // without unit
    .mix(@top) when (unit(@top) = @top) {
      top: ~`@{top} + @{unit}`;
    }
    .mix(@top);
  }

  .mix-right(@right) when (iskeyword(@right)) {
    right:  @right;
  }
  .mix-right(@right) when (isnumber(@right)) {
    .mix(@right) when not (unit(@right) = @right) {
      right:  @right;
    }
    .mix(@right) when (unit(@right) = @right) {
      right: ~`@{right} + @{unit}`;
    }
    .mix(@right);
  }
  
  .mix-bottom(@bottom) when (iskeyword(@bottom)) {
    bottom:  @bottom;
  }
  .mix-bottom(@bottom) when (isnumber(@bottom)) {
    .mix(@bottom) when not (unit(@bottom) = @bottom) {
      bottom:  @bottom;
    }
    .mix(@bottom) when (unit(@bottom) = @bottom) {
      bottom: ~`@{bottom} + @{unit}`;
    }
    .mix(@bottom);
  }

  .mix-left(@left) when (iskeyword(@left)) {
    left:  @left;
  }
  .mix-left(@left) when (isnumber(@left)) {
    .mix(@left) when not (unit(@left) = @left) {
      left:  @left;
    }
    .mix(@left) when (unit(@left) = @left) {
      left: ~`@{left} + @{unit}`;
    }
    .mix(@left);
  }
  
  position: @position;
  // get top right bottom left
  .mix-top(@top);
  .mix-right(@right);
  .mix-bottom(@bottom);
  .mix-left(@left);
}
